{
  "extends": ["next", "next/core-web-vitals", "eslint:recommended", "plugin:@typescript-eslint/recommended"],
  "plugins": [
    "@typescript-eslint",
    "simple-import-sort",
    "@stylistic/eslint-plugin-ts",
    "@stylistic/js"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 13
  },
  "env": {
    "browser": true,
    "node": true,
    "es2021": true,
    "jest": true
  },
  "rules": {
    "no-console": "warn",
    "no-useless-return": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/no-invalid-this": "error",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@stylistic/ts/semi": [2, "always"],
    "@stylistic/ts/indent": ["error", 2],
    "@stylistic/ts/quotes": ["error", "single"],
    "@stylistic/ts/space-before-blocks": "error",
    "@stylistic/ts/space-before-function-paren": ["error", {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
    }],
    "@stylistic/ts/type-annotation-spacing": "error",
    "@stylistic/ts/block-spacing": "error",
    "@stylistic/ts/comma-spacing": "error",
    "@stylistic/ts/keyword-spacing": "error",
    "@stylistic/ts/space-infix-ops": "error",
    "@stylistic/js/space-in-parens": ["error", "never"],
    "@stylistic/js/arrow-spacing": "error",
    "no-duplicate-imports": "error",
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/self-closing-comp": "error"
  },
  "overrides": [
    {
      "files": ["*.spec.tsx", "*.spec.ts"],
      "rules": {
        "no-console": "off"
      }
    },
    {
      "files": ["*.tsx", "*.ts", "*.js", "*.jsx"],
      "rules": {
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
        "error", 
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_",
          "caughtErrorsIgnorePattern": "^_"
        }]
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}